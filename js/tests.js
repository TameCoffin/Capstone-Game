// document.addEventListener('keyup', (event) => {
//     if (event.code === 'Space') {
//         console.log('Space pressed')
//     }
// })

// (e) is the event. ('keyup' = checking if a key is pressed, (event) = what will be affected)
// the if statement is asking: (if the key pressed is space: do stuff)
// event = basically just activating the check
// code = simply just the id of the key being pressed
// 'space' = the assigned key

// we need to find a way to change the output of pressing space based on the event it's used for. Right now, all it can do is just display "space pressed" in the console. If we create a const that is "console.log('space pressed') and put it in the same place, it should still display in the console. So i can create variables and then just update what goes in the event listner output."

// const actions = ["action1", "action2", "action3"]

// function spaceBar() {
//     document.addEventListener('keyup', (event) => {
//         if (event.code === 'Space') {
//             console.log('Space pressed')
//         }
//     })
// }

let subtraction = 0.25

let min = 3
let max = 6
let firstNo = 4
// i think if we create a number reducer outside of the function then the random numbers will both be reduced in the same way

// function timer() {
//     function numberRando() {
//         firstNo = Math.floor(Math.random() * (max - min + 1) + min)
//         console.log(firstNo + " First run");
//     }
//     numberRando()
//     firstNo -= subtraction
//     console.log(firstNo + " Second run");
//     // do two functions then have them perform at the same time
//     setTimeout(timer, firstNo * 1000)
// }

// maybe make a function that continually adds 0.25 to subtraction then subract the value in the function


// function subractor() {
//     firstNo -= subtraction
//     console.log(firstNo);
//     numberRando()
// }

function increaseSubtract() {
    subtraction += 0.25
}

function numberRando() {
    increaseSubtract()
    firstNo = Math.floor(Math.random() * (max - min + 1) + min)// 3.75
    firstNo -= subtraction //3.5
    console.log(firstNo);
    if (firstNo <= 1) {
        subtraction = 0
        console.log("Floor Reached");
    }
    setTimeout(numberRando, firstNo * 1000)
    return firstNo
}

numberRando()

// 

// function numberRando() {
//     setInterval(() => {
//         firstNo = Math.floor(Math.random() * (max - min + 1) + min)
//         firstNo -= subtraction
//         console.log(firstNo);
        
        
//     }, firstNo * 1000);
//     numberRando()
//     clearInterval(numberRando)
// }



// function numberRandomizer() {
//     function subractor() {
//         firstNo -= subtraction
//     }
//     subractor()
//     numberRando()
//     function numberRando() {
//         firstNo = Math.floor(Math.random() * (max - min + 1) + min)
//         console.log(firstNo);
//         setTimeout(numberRandomizer, firstNo * 1000)
//     }
// }

// numberRandomizer()
// function subtract() {
//     firstNo -= subtraction
//     console.log(firstNo + " should end in 75");
//     setTimeout(numberRando, firstNo * 1000)
// }

// numberRando()
/*  

The current situation:

    - The inital value of the "firstNo" is 4

    - This number is run through a randomizer (numberRando, line 44) that will change "firstNo" into a number between 1 - 4. This is working correctly (line 45)

    - The number then gets moved into a setTimeout at the bottom of numberRando. The timeout will be multipled by 1000 and whatever number numberRando logged (essentially just adding the value by 1 second).

    - Once the timeout has run, the next function, "subtract", will be called.

    - Subtract will decrease whatever number was previously generated by the init "subtraction" which is the number 0.25. The result is then logged and it should be the original number subracted by 0.25. This also currently works.

    - Finally, the same setTimeout method is used, only this time calling numberRando, creating an endless loop between both functions. But this is where my issue starts.

What I'm trying to do:

    - I want have the firstNo subtracted value stay each loop of both functions.

    so it would go like this: 

        (lets say the first random number is 3 and the next random number is 4 and last is 2)

        firstNo -> random number(3)
        random number(3) - 0.25 = 2.75

        then next cycle, a new random number is generated:

        random number is 4 and carries the subracted amount (0.25)
        random number(3.75) - 0.25 = 3.50

        next cycle:

        random number is 2 - the continued subractions
        random number(1.50) - 0.25 = 1.25

        etc
*/


